/*
 * Copyright (C) 2013 Marek Belisko <marek@goldelico.com>
 *
 * Based on omap3-beagle-xm.dts
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/*
 * device tree for GTA04A4
 */

/dts-v1/;

#include "omap36xx.dtsi"

/ {
	model = "Goldelico GTA04A4";
	compatible = "ti,omap3-gta04", "ti,omap36xx", "ti,omap3";

	cpus {
		cpu@0 {
			cpu0-supply = <&vcc>;
		};
	};

	memory {
		device_type = "memory";
		reg = <0x80000000 0x20000000>; /* 512 MB */
	};

	aliases {
		display0 = &lcd;
		display1 = &tv0;
	};

	gpio-keys {
		compatible = "gpio-keys";

		aux-button {
			label = "aux";
			linux,code = <169>;
			gpios = <&gpio1 7 GPIO_ACTIVE_HIGH>;
			gpio-key,wakeup;
		};
	};

	gpio-keys-wwan-wakeup {
		compatible = "gpio-keys";

		wwan_wakeup_button: wwan-wakeup-button {
			label = "3G_WOE";
			linux,code = <240>;
			gpios = <&gpio1 10 GPIO_ACTIVE_HIGH>;
			gpio-key,wakeup;
		};
	};

	hsusb2_phy: hsusb2_phy {
		compatible = "usb-nop-xceiv";
		reset-gpios = <&gpio6 14 GPIO_ACTIVE_LOW>; /* gpio_174 = reset for USB3322 */
/*		vcc-supply = <&hsusb2_power>; */
	};

	antenna-detect {
		compatible = "linux,extcon-gpio";
		label = "gps_antenna";
		gpios = <&gpio5 16 0>; /* GPIO144 */
		debounce-delay-ms = <10>;
		irq-flags = <IRQ_TYPE_EDGE_BOTH>;
		state-on = "external";
		state-off = "internal";
	};

	sound {
		compatible = "ti,omap-twl4030";
		ti,model = "gta04";

		ti,mcbsp = <&mcbsp2>;
		ti,codec = <&twl_audio>;

		ti,mcbsp-voice = <&mcbsp4>;
/*		ti,jack-det-gpio = <&gpio? >;    /* planned for GTA04A5 */
/*		ti,audio-routing = "Headset Mic", "HSMIC",
				 specify list of audio routings */
	};

	sound_card {
		compatible = "goldelico,gta04-audio";
		gta04,cpu-dai = <&mcbsp2>;
	};

	gtm601_codec: voice_codec {
		compatible = "gtm601-codec";
	};

	sound_voice {
		compatible = "goldelico,gta04-voice";
		gta04,cpu-dai = <&mcbsp4>;
		gta04,codec = <&gtm601_codec>;
	};

	w2cbw003_codec: headset_codec {
		compatible = "w2cbw003-codec";
	};

	sound_headset {
		compatible = "goldelico,gta04-headset";
		gta04,cpu-dai = <&mcbsp3>;
		gta04,codec = <&w2cbw003_codec>;
	};

	sound_fm {
		compatible = "goldelico,gta04-fm";
		gta04,cpu-dai = <&mcbsp1>;
		gta04,codec = <&si4721_codec>;
	};

	madc-hwmon {
		compatible = "ti,twl4030-madc-hwmon";
	};

	battery: battery {
		compatible = "ti,twl4030-madc-battery";
		capacity = <1200000>;
		charging-calibration-data = <4200 100 4100 75 4000 55 3900 25 3800 5 3700 2 3600 1 3300 0>;
		discharging-calibration-data = <4200 100 4100 95 4000 70 3800 50 3700 10 3600 5 3300 0>;
	};

	spi_lcd: spi_lcd {
		compatible = "spi-gpio";
		#address-cells = <0x1>;
		#size-cells = <0x0>;
		pinctrl-names = "default";
		pinctrl-0 = <&spi_gpio_pins>;

		gpio-sck = <&gpio1 12 0>;
		gpio-miso = <&gpio1 18 0>;
		gpio-mosi = <&gpio1 20 0>;
		cs-gpios = <&gpio1 19 0>;
		num-chipselects = <1>;

		/* lcd panel */
		lcd: td028ttec1@0 {
			compatible = "toppoly,td028ttec1";
			reg = <0>;
			spi-max-frequency = <100000>;
			spi-cpol;
			spi-cpha;

			label = "lcd";
			port {
				lcd_in: endpoint {
					remote-endpoint = <&dpi_out>;
				};
			};
		};
	};

	backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm 0 2000000>;
		brightness-levels = <0 11 20 30 40 50 60 70 80 90 100>;
		default-brightness-level = <10>;
		pinctrl-names = "default";
		pintcrl-0 = <&backlight_pins>;
		power-supply = <&power>;
	};

	pwm: omap_pwm {
		compatible = "ti,omap-pwm";
		timers = <&timer11>;
		#pwm-cells = <2>;
	};

	/* should be a PWM */
	power: fixed_regulator@0 {
	       compatible = "regulator-fixed";
	       regulator-name = "bl-enable";
	       regulator-boot-on;
	       regulator-always-on;
	       regulator-min-microvolt = "1000000";
	       regulator-max-microvolt = "1000000";
	       gpio = <&gpio2 25 0>;	/* GPT11/PWM */
	       enable-active-high;
	};

	tv0: connector@1 {
		compatible = "svideo-connector";
		label = "tv";

		port {
			tv_connector_in: endpoint {
				remote-endpoint = <&venc_out>;
			};
		};
	};

	tv_amp: opa362 {
		compatible = "ti,opa362";
		gpio = <&gpio1 23 0>;	/* GPIO to enable video out amplifier */
		/* needs some endpoint plumbing into the VENC signal chain */
	};

	bt_en: w2cbw003 { /* presents a single gpio to be plumbed to uart1 dts */
		compatible = "wi2wi,w2cbw003";
		gpio-controller;
		#gpio-cells = <2>;

		vdd-supply = <&vaux4>;
	};

	gps_en: w2sg0004 { /* presents a single gpio to be plumbed to uart2 dts */
		compatible = "wi2wi,w2sg0004";
		gpio-controller;
		#gpio-cells = <2>;

		lna-supply = <&vsim>;	/* LNA regulator */
		on-off-gpio = <&gpio5 17 0>;	/* GPIO_145: trigger for turning on/off w2sg0004 */
		rx-gpio = <&gpio5 19 0>;	/* GPIO_147: RX */
		rx-on-mux = < (PIN_INPUT_PULLUP | MUX_MODE0) >;
		rx-off-mux = < (PIN_INPUT_PULLUP | MUX_MODE4) >;
	};

	modem_en: modem { /* control modem power through rfkill */
		compatible = "option,gtm601";
		/* compatible = "gemalto,phs8" for Neo900/GTA04b7 */
		gpio-controller;
		#gpio-cells = <2>;

		usb-port = <&hsusb2_phy>;
		on-off-gpio = <&gpio6 26 0>;	/* GPIO_186: trigger to power on modem */
		on-indicator-gpio = <0>;
	/*	on-indicator-gpio = <&gpio5 19 0>;	/* n/a on GTA04A4 */
	};

};

&omap3_pmx_core {
	uart1_pins: pinmux_uart1_pins {
		pinctrl-single,pins = <
			0x152 (PIN_INPUT | MUX_MODE0)		/* uart1_rx.uart1_rx */
			0x14c (PIN_OUTPUT |MUX_MODE0)		/* uart1_tx.uart1_tx */
			/* what about rts/cts? */
		>;
	};

	uart2_pins: pinmux_uart2_pins {
		pinctrl-single,pins = <
			0x14a (PIN_INPUT | MUX_MODE0)		/* uart2_rx.uart2_rx */
			0x148 (PIN_OUTPUT | MUX_MODE0)		/* uart2_tx.uart2_tx */
			/* what about rts/cts? */
		>;
	};

	uart3_pins: pinmux_uart3_pins {
		pinctrl-single,pins = <
			0x16e (PIN_INPUT /* | PIN_OFF_WAKEUPENABLE */ | MUX_MODE0)		/* uart3_rx.uart3_rx */
			0x170 (PIN_OUTPUT | MUX_MODE0)		/* uart3_tx.uart3_tx */
			/* what about rts/cts etc.? */
		>;
	};

	mmc1_pins: pinmux_mmc1_pins {
		pinctrl-single,pins = <
			0x114 (PIN_INPUT_PULLUP | MUX_MODE0)	/* sdmmc1_clk.sdmmc1_clk */
			0x116 (PIN_INPUT_PULLUP | MUX_MODE0)	/* sdmmc1_cmd.sdmmc1_cmd */
			0x118 (PIN_INPUT_PULLUP | MUX_MODE0) 	/* sdmmc1_dat0.sdmmc1_dat0 */
			0x11a (PIN_INPUT_PULLUP | MUX_MODE0)	/* sdmmc1_dat1.sdmmc1_dat1 */
			0x11c (PIN_INPUT_PULLUP | MUX_MODE0)	/* sdmmc1_dat2.sdmmc1_dat2 */
			0x11e (PIN_INPUT_PULLUP | MUX_MODE0)	/* sdmmc1_dat3.sdmmc1_dat3 */
		>;
	};

	dss_dpi_pins: pinmux_dss_dpi_pins {
               pinctrl-single,pins = <
                       0x0a4 (PIN_OUTPUT | MUX_MODE0)   /* dss_pclk.dss_pclk */
                       0x0a6 (PIN_OUTPUT | MUX_MODE0)   /* dss_hsync.dss_hsync */
                       0x0a8 (PIN_OUTPUT | MUX_MODE0)   /* dss_vsync.dss_vsync */
                       0x0aa (PIN_OUTPUT | MUX_MODE0)   /* dss_acbias.dss_acbias */
                       0x0ac (PIN_OUTPUT | MUX_MODE0)   /* dss_data0.dss_data0 */
                       0x0ae (PIN_OUTPUT | MUX_MODE0)   /* dss_data1.dss_data1 */
                       0x0b0 (PIN_OUTPUT | MUX_MODE0)   /* dss_data2.dss_data2 */
                       0x0b2 (PIN_OUTPUT | MUX_MODE0)   /* dss_data3.dss_data3 */
                       0x0b4 (PIN_OUTPUT | MUX_MODE0)   /* dss_data4.dss_data4 */
                       0x0b6 (PIN_OUTPUT | MUX_MODE0)   /* dss_data5.dss_data5 */
                       0x0b8 (PIN_OUTPUT | MUX_MODE0)   /* dss_data6.dss_data6 */
                       0x0ba (PIN_OUTPUT | MUX_MODE0)   /* dss_data7.dss_data7 */
                       0x0bc (PIN_OUTPUT | MUX_MODE0)   /* dss_data8.dss_data8 */
                       0x0be (PIN_OUTPUT | MUX_MODE0)   /* dss_data9.dss_data9 */
                       0x0c0 (PIN_OUTPUT | MUX_MODE0)   /* dss_data10.dss_data10 */
                       0x0c2 (PIN_OUTPUT | MUX_MODE0)   /* dss_data11.dss_data11 */
                       0x0c4 (PIN_OUTPUT | MUX_MODE0)   /* dss_data12.dss_data12 */
                       0x0c6 (PIN_OUTPUT | MUX_MODE0)   /* dss_data13.dss_data13 */
                       0x0c8 (PIN_OUTPUT | MUX_MODE0)   /* dss_data14.dss_data14 */
                       0x0ca (PIN_OUTPUT | MUX_MODE0)   /* dss_data15.dss_data15 */
                       0x0cc (PIN_OUTPUT | MUX_MODE0)   /* dss_data16.dss_data16 */
                       0x0ce (PIN_OUTPUT | MUX_MODE0)   /* dss_data17.dss_data17 */
                       0x0d0 (PIN_OUTPUT | MUX_MODE0)   /* dss_data18.dss_data18 */
                       0x0d2 (PIN_OUTPUT | MUX_MODE0)   /* dss_data19.dss_data19 */
                       0x0d4 (PIN_OUTPUT | MUX_MODE0)   /* dss_data20.dss_data20 */
                       0x0d6 (PIN_OUTPUT | MUX_MODE0)   /* dss_data21.dss_data21 */
                       0x0d8 (PIN_OUTPUT | MUX_MODE0)   /* dss_data22.dss_data22 */
                       0x0da (PIN_OUTPUT | MUX_MODE0)   /* dss_data23.dss_data23 */
		>;
	};

	backlight_pins: backlight_pins_pimnux {
		pinctrl-single,pins = <0x8a MUX_MODE4>;
	};

	hsusb2_pins: pinmux_hsusb2_pins {
		pinctrl-single,pins = <
			OMAP3_CORE1_IOPAD(0x21d4, PIN_INPUT_PULLDOWN | MUX_MODE3)	/* mcspi1_cs3.hsusb2_data2 */
			OMAP3_CORE1_IOPAD(0x21d6, PIN_INPUT_PULLDOWN | MUX_MODE3)	/* mcspi2_clk.hsusb2_data7 */
			OMAP3_CORE1_IOPAD(0x21d8, PIN_INPUT_PULLDOWN | MUX_MODE3)	/* mcspi2_simo.hsusb2_data4 */
			OMAP3_CORE1_IOPAD(0x21da, PIN_INPUT_PULLDOWN | MUX_MODE3)	/* mcspi2_somi.hsusb2_data5 */
			OMAP3_CORE1_IOPAD(0x21dc, PIN_INPUT_PULLDOWN | MUX_MODE3)	/* mcspi2_cs0.hsusb2_data6 */
			OMAP3_CORE1_IOPAD(0x21de, PIN_INPUT_PULLDOWN | MUX_MODE3)	/* mcspi2_cs1.hsusb2_data3 */
		>;
	};

	i2c1_pins: pinmux_i2c1_pins {
		pinctrl-single,pins = <
			0x18a (PIN_INPUT_PULLUP | MUX_MODE0)   /* i2c1_scl.i2c1_scl */
			0x18c (PIN_INPUT_PULLUP | MUX_MODE0)   /* i2c1_sda.i2c1_sda */
		>;
	};

	i2c2_pins: pinmux_i2c2_pins {
		pinctrl-single,pins = <
			0x18e (PIN_INPUT_PULLUP | MUX_MODE0)   /* i2c2_scl.i2c2_scl */
			0x190 (PIN_INPUT_PULLUP | MUX_MODE0)   /* i2c2_sda.i2c2_sda */
		>;
	};

	i2c3_pins: pinmux_i2c3_pins {
		pinctrl-single,pins = <
			0x192 (PIN_INPUT_PULLUP | MUX_MODE0)   /* i2c3_scl.i2c3_scl */
			0x194 (PIN_INPUT_PULLUP | MUX_MODE0)   /* i2c3_sda.i2c3_sda */
		>;
	};

	bma180_pins: pinmux_bma180_pins {
		pinctrl-single,pins = <
			OMAP3_CORE1_IOPAD(0x213a, PIN_INPUT_PULLUP | MUX_MODE4)   /* gpio115 */
		>;
	};
};

&omap3_pmx_core2 {
	pinctrl-names = "default";
	pinctrl-0 = <
			&hsusb2_2_pins
	>;

	hsusb2_2_pins: pinmux_hsusb2_2_pins {
		pinctrl-single,pins = <
			OMAP3630_CORE2_IOPAD(0x25f0, PIN_OUTPUT | MUX_MODE3)		/* etk_d10.hsusb2_clk */
			OMAP3630_CORE2_IOPAD(0x25f2, PIN_OUTPUT | MUX_MODE3)		/* etk_d11.hsusb2_stp */
			OMAP3630_CORE2_IOPAD(0x25f4, PIN_INPUT_PULLDOWN | MUX_MODE3)	/* etk_d12.hsusb2_dir */
			OMAP3630_CORE2_IOPAD(0x25f6, PIN_INPUT_PULLDOWN | MUX_MODE3)	/* etk_d13.hsusb2_nxt */
			OMAP3630_CORE2_IOPAD(0x25f8, PIN_INPUT_PULLDOWN | MUX_MODE3)	/* etk_d14.hsusb2_data0 */
			OMAP3630_CORE2_IOPAD(0x25fa, PIN_INPUT_PULLDOWN | MUX_MODE3)	/* etk_d15.hsusb2_data1 */
		>;
	};

	spi_gpio_pins: spi_gpio_pinmux {
		pinctrl-single,pins = <
			OMAP3630_CORE2_IOPAD(0x25d8, PIN_OUTPUT | MUX_MODE4) /* clk */
			OMAP3630_CORE2_IOPAD(0x25e6, PIN_OUTPUT | MUX_MODE4) /* cs */
			OMAP3630_CORE2_IOPAD(0x25e8, PIN_OUTPUT | MUX_MODE4) /* tx */
			OMAP3630_CORE2_IOPAD(0x25e4, PIN_INPUT | MUX_MODE4) /* rx */
		>;
	};
};

&i2c1 {
	clock-frequency = <2600000>;

	twl: twl@48 {
		reg = <0x48>;
		interrupts = <7>; /* SYS_NIRQ cascaded to intc */
		interrupt-parent = <&intc>;

		twl_power: power {
			compatible = "ti,twl4030-power";
			ti,use_poweroff;
		};
		/* spare */
		vaux1: regulator-vaux1 {
			compatible = "ti,twl4030-vaux1";
			regulator-min-microvolt = <2500000>;
			regulator-max-microvolt = <3000000>;
		};
		/* sensors */
		vaux2: regulator-vaux2 {
			compatible = "ti,twl4030-vaux2";
			regulator-min-microvolt = <2800000>;
			regulator-max-microvolt = <2800000>;
			regulator-always-on;	/* we should not switch off while keeping 1V8 on! */
		};
		/* camera */
		vaux3: regulator-vaux3 {
			compatible = "ti,twl4030-vaux3";
			regulator-min-microvolt = <2500000>;
			regulator-max-microvolt = <2500000>;
		};
		/* WLAN/BT */
		vaux4: regulator-vaux4 {
			compatible = "ti,twl4030-vaux4";
			regulator-min-microvolt = <2800000>;
			regulator-max-microvolt = <3150000>;
		};
		/* GPS LNA */
		vsim: regulator-vsim {
			compatible = "ti,twl4030-vsim";
			regulator-min-microvolt = <2800000>;
			regulator-max-microvolt = <3150000>;
		};
		/* backup battery charger */
		charger: bci {
			ti,bb-uvolt = <3200000>;
			ti,bb-uamp = <150>;
		};
		twl_audio: audio {
			compatible = "ti,twl4030-audio";

			ti,enable-vibra = <1>;

			codec {
				ti,ramp_delay_value = <3>;
			};
		};
	};
};

#include "twl4030.dtsi"
#include "twl4030_omap3.dtsi"

&i2c2 {
	clock-frequency = <400000>;

	/* pressure sensor */
	bmp085@77 {
		compatible = "bosch,bmp085";
		reg = <0x77>;
		interrupt-parent = <&gpio4>;
		interrupts = <17 IRQ_TYPE_EDGE_RISING>;
	};

	/* accelerometer */
	bma180@41 {
		/* we use the BMA150 Input (CONFIG_INPUT_BMA150) driver */
		compatible = "bosch,bma180";
		reg = <0x41>;
		pinctrl-names = "default";
		pintcrl-0 = <&bma180_pins>;
		interrupt-parent = <&gpio4>;
		interrupts = <19 (IRQ_TYPE_LEVEL_HIGH | IRQ_TYPE_EDGE_RISING)>;
	};

	/* leds */
	tca_gpios: tca6507@45 {
		compatible = "ti,tca6507";
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <0x45>;

		gpio-controller;
		#gpio-cells = <2>;

		gta04_led0: red_aux@0 {
			label = "gta04:red:aux";
			reg = <0x0>;
		};

		gta04_led1: green_aux@1 {
			label = "gta04:green:aux";
			reg = <0x1>;
		};

		gta04_led3: red_power@3 {
			label = "gta04:red:power";
			reg = <0x3>;
			linux,default-trigger = "default-on";
		};

		gta04_led4: green_power@4 {
			label = "gta04:green:power";
			reg = <0x4>;
		};

		wifi_reset: wifi_reset@6 { /* reference as <&tca_gpios 0 0> since it is currently the only GPIO */
			reg = <0x6>;
			compatible = "gpio";
		};
	};

	/* touchscreen */
	tsc2007@48 {
		compatible = "ti,tsc2007";
		reg = <0x48>;
		interrupt-parent = <&gpio6>;
		interrupts = <0 IRQ_TYPE_EDGE_FALLING>;
		gpios = <&gpio6 0 GPIO_ACTIVE_LOW>;	/* gpio160 */
		ti,x-plate-ohms = <550>;
		ti,rng_x = <123 456>;
		ti,rng_y = <123 456>;
		ti,rng_z = <123 456>;
		ti,flip_x = <0>;
		ti,flip_y = <1>;
		ti,swap_xy = <0>;
	};

	/* compass aka magnetometer */
	hmc5843@1e {
		compatible = "honeywell,hmc5883l";
		reg = <0x1e>;
		vdd-supply = <&vaux2>;	/* driver should devm_regulator_get_optional("vdd") */
	};

	/* gyroscope */
	itg3200@68 {
		compatible = "invensense,itg3200";
		reg = <0x68>;
		vdd-supply = <&vaux2>;	/* driver should devm_regulator_get_optional("vdd") */
	};

	/* RFID EEPROM */
	m24lr64@50 {
		compatible = "at,24c64";
		reg = <0x50>;
	};

	/* flash/torch (torch driver not yet available) */
/* segfaults during modprobe
	tps61050@33 {
		compatible = "ti,tps61050";
		reg = <0x33>;

		flash: regulator@0 {
			regulator-min-microvolt  = <1000000>;
			regulator-max-microvolt  = <3000000>;
		};
	};
*/

	/* camera (driver not yet available) */
	ov9655@30 {
		compatible = "omnivision,ov9655";
		reg = <0x30>;
		vdd_ana-supply = <&vaux3>;	/* driver should devm_regulator_get_optional("vdd_ana") */
		/* connect to camera interface to supply clock and capture */
	};

	/* FM Radio (no kernel driver) */
	si4721_codec: si4721@11 {
		compatible = "silicon-labs,si4721";
		reg = <0x11>;
	};

};

&i2c3 {
	clock-frequency = <100000>;
	/* unused */
};

&usb_otg_hs {
	interface-type = <0>;
	usb-phy = <&usb2_phy>;
	phys = <&usb2_phy>;
	phy-names = "usb2-phy";
	mode = <3>;
	power = <50>;
};

&mmc1 {
	pinctrl-names = "default";
	pinctrl-0 = <&mmc1_pins>;
	vmmc-supply = <&vmmc1>;
	bus-width = <4>;
	ti,non-removable;
};

&mmc2 {
	vmmc-supply = <&vaux4>;
	bus-width = <4>;
	ti,non-removable;
	reset-gpios = <&tca_gpios 0 GPIO_ACTIVE_LOW>;	/* W2CBW003 reset through tca6507 */
};

&mmc3 {
	status = "disabled";
};

&uart1 { /* Bluetooth /dev/ttyO0 */
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_pins>;
	dtr-gpio = <&bt_en 0 GPIO_ACTIVE_LOW>;	/* w2cbw bluetooth power control through virtual gpio */
};

&uart2 { /* GPS /dev/ttyO1 */
	pinctrl-names = "default";
	pinctrl-0 = <&uart2_pins>;
	dtr-gpio = <&gps_en 0 GPIO_ACTIVE_HIGH>;	/* w2sg0004 GPS power control through virtual gpio */
};

&uart3 { /* Console and IrDA /dev/ttyO2 */
	pinctrl-names = "default";
	pinctrl-0 = <&uart3_pins>;
};

&usbhshost {
	port2-mode = "ehci-phy";
};

&usbhsehci {
	phys = <0 &hsusb2_phy>;
};

&charger {
	bb_uvolt = <3200000>;
	bb_uamp = <150>;
};

&venc {
	status = "ok";

	vdda-supply = <&vdac>;

	port {
		venc_out: endpoint {
			remote-endpoint = <&tv_connector_in>;
			ti,channels = <2>;
		};
	};
};

&gpmc {
	ranges = <0 0 0x30000000 0x04>;       /* CS0: NAND */

	nand@0,0 {
		reg = <0 0 0>; /* CS0, offset 0 */
		nand-bus-width = <16>;
		ti,nand-ecc-opt = "bch8";
		/* ti,nand-xfer-type = "polled"; */
		/* ti,elm-id = <&elm> */

		gpmc,sync-clk-ps = <0>;
		gpmc,cs-on-ns = <0>;
		gpmc,cs-rd-off-ns = <44>;
		gpmc,cs-wr-off-ns = <44>;
		gpmc,adv-on-ns = <6>;
		gpmc,adv-rd-off-ns = <34>;
		gpmc,adv-wr-off-ns = <44>;
		gpmc,we-off-ns = <40>;
		gpmc,oe-off-ns = <54>;
		gpmc,access-ns = <64>;
		gpmc,rd-cycle-ns = <82>;
		gpmc,wr-cycle-ns = <82>;
		gpmc,wr-access-ns = <40>;
		gpmc,wr-data-mux-bus-ns = <0>;
		gpmc,device-width = <2>;

		#address-cells = <1>;
		#size-cells = <1>;

		x-loader@0 {
			label = "X-Loader";
			reg = <0 0x80000>;
		};

		bootloaders@80000 {
			label = "U-Boot";
			reg = <0x80000 0x1e0000>;
		};

		bootloaders_env@260000 {
			label = "U-Boot Env";
			reg = <0x260000 0x20000>;
		};

		kernel@280000 {
			label = "Kernel";
			reg = <0x280000 0x400000>;
		};

		filesystem@680000 {
			label = "File System";
			reg = <0x680000 0xf980000>;
		};
	};
};

&mcbsp1 {
	status = "okay";
};

&mcbsp2 {
	status = "okay";
};

&mcbsp3 {
	status = "okay";
};

&mcbsp4 {
	status = "okay";
};

/* Needed to power the DPI pins */
&vpll2 {
	regulator-always-on;
};

&dss {
	pinctrl-names = "default";
	pinctrl-0 = < &dss_dpi_pins >;

	status = "okay";

	port {
		dpi_out: endpoint {
			remote-endpoint = <&lcd_in>;
			data-lines = <24>;
		};
	};
};
