/*
 * Copyright (C) 2014 OpenPandora - http://www.pyra-handheld.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/* we start with the omap5-uevm tree since the Pyra is currently a separate board connected to the EVM expansion connector(s) */

#include "omap5-uevm.dts"

/* overwrite device model */

/ {
	model = "Pyra-Handheld";

	aliases {
		display0 = &lcd;
		display1 = &hdmi0;
	};

	/* DC/DC converter for LCD panel */
	dsi1_panel_power: dsi1_panel_power_reg {
		compatible = "regulator-fixed";
		regulator-name = "dsi1_panel_power";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&gpio3 18 0>;	/* gpio3_82 = display-enable */
		startup-delay-us = <70000>;
		enable-active-high;
	};

	/* DC/DC converter for USB Host ports, Modem USB and HDMI 5V */
	modem_vbus_hdmi_power: tps2505_reg {
		compatible = "regulator-fixed";
		regulator-name = "modem_vbus_hdmi_power";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&gpio99 8 GPIO_ACTIVE_HIGH>;
		enable-active-high;
		startup-delay-us = <70000>;
//		vin-supply = <&vsys>;
 regulator-boot-on;
	};

	/* this are the DC/DC converters that supply the
	   5V to USB devices connected to the Host ports.
	   They should be under the (software) control
	   of the USB3503A hub on the CPU board */

	host1_vbus_power:host1_vbus_power_reg {
		compatible = "regulator-fixed";
		regulator-name = "host1_vbus_power";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&gpio99 9 GPIO_ACTIVE_HIGH>;
		enable-active-high;
		startup-delay-us = <70000>;
		vin-supply = <&modem_vbus_hdmi_power>;
 regulator-boot-on;
	};

	host2_vbus_power: host2_vbus_power_reg {
		compatible = "regulator-fixed";
		regulator-name = "host2_vbus_power";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&gpio99 10 GPIO_ACTIVE_HIGH>;
		enable-active-high;
		startup-delay-us = <70000>;
		vin-supply = <&modem_vbus_hdmi_power>;
 regulator-boot-on;
	};

	/* this is the modem power switch (similar to a LDO) */
	modem_power: modem_power_reg {
		compatible = "regulator-fixed";
		regulator-name = "modem_vbus_power";
		regulator-min-microvolt = <3200000>;
		regulator-max-microvolt = <4200000>;
		gpio = <&gpio99 15 GPIO_ACTIVE_HIGH>;
		enable-active-high;
		startup-delay-us = <100000>;
//		vin-supply = <&vsys>;
 regulator-boot-on;
	};

	modem_en: modem { /* control modem power through rfkill */
		compatible = "gemalto,phs8";
		gpio-controller;
		#gpio-cells = <2>;

	/* FIXME: this does not yet reflect the Pyra hardware setup */

	/*	usb-port = <&hsusb2_phy>; 	/* USB phy where we can check the modem status */
	/* FIXME:	on-off-gpio = <&gpio6 26 GPIO_ACTIVE_HIGH>;	/* GPIO_186: trigger to power on modem */
	/*	on-indicator-gpio = <&gpio5 19 GPIO_ACTIVE_HIGH>;	/* Feedback GPIO */
/*		modem-suppy = <&modem_power>;		/* enable external power regulator */
		/* VBUS supply should probably be controlled through the USB PHY driver for the modem port */
/*		vbus-suppy = <&modem_vbus_hdmi_power>;	/* apply VBUS to the modem */
	};

	mic_presence {
		compatible = "extcon-gpio";
		label = "mic_presence";
		interrupt-parent = <&gpio99>;
		interrupts = <14 IRQ_TYPE_EDGE_BOTH>;
		irq-flags = <IRQ_TYPE_EDGE_BOTH>;
		gpios = <&gpio99 14 GPIO_ACTIVE_LOW>;
		debounce-delay-ms = <10>;
		state-on = "present";
		state-off = "unplugged";
	};

/* FIXME: having both leads to an irq conflict */
/*	mic_presence_evm { /* move this to omap5-uevm.dts */
/*		compatible = "extcon-gpio";
		label = "mic_presence_evm";
		interrupt-parent = <&gpio9>;
		interrupts = <14 IRQ_TYPE_EDGE_BOTH>;
		irq-flags = <IRQ_TYPE_EDGE_BOTH>;
		gpios = <&gpio9 14 GPIO_ACTIVE_LOW>;
		debounce-delay-ms = <10>;
		state-on = "present";
		state-off = "unplugged";
	}; */

/*	extcon_test { /* if enabled, disable BTN1 */
/*		compatible = "extcon-gpio";
		label = "user_button";
		interrupt-parent = <&gpio3>;
		interrupts = <19 2>;
		irq-flags = <IRQ_TYPE_EDGE_BOTH>;
		gpios = <&gpio3 19 1>;	/* gpio3_83 is BTN1 */
/*		debounce-delay-ms = <50>;
		state-on = "status-on";
		state-off = "status-off";
	}; */

};

/* LCD panel - MIPI */

&dss {
	status = "ok";

	pinctrl-names = "default";
	pinctrl-0 = <&pyra_dsi_a>;

	port {
		dsi_out: endpoint {
			remote-endpoint = <&dsi1>;
		};
	};
};

&dsi1 {
	status = "ok";

	vdd-supply = <&ldo4_reg>;

	port {
		dsi1_out_ep: endpoint {
			remote-endpoint = <&lcd_in>;
			lanes = <
				0       /* lane0+ = clk + */
				1       /* lane0- = clk - */
				2       /* lane1+ = data1 + */
				3       /* lane1- = data1 - */
				4       /* lane2+ = data2 + */
				5       /* lane2- = data2 - */
				6       /* lane3+ = data3 + */
				7       /* lane3- = data3 - */
				8       /* lane4+ = data4 + */
				9       /* lane4- = data4 - */
			>;
		};
	};

	lcd: lcd {
		compatible = "lg,lh500wf1";	/* default to be overwritten by specific panel */
		label = "lcd";

		pinctrl-names = "default";
		pinctrl-0 = <&pyra_display_pins>;

		gpios =
			<&gpio6 16 0>,	/* goip6_176 = display reset */
			<&gpio3 18 0>;	/* gpio3_82 = enable DC/DC */

		port {
			lcd_in: endpoint {
				remote-endpoint = <&dsi1_out_ep>;
			};
		};
	};
};


/* add overlay pimmux for pyra on 5432evm */

&omap5_pmx_core {

	pinctrl-0 = <
			/* copied from original */
			&usbhost_pins
			&led_gpio_pins

			/* new entries */
			&pyra_button_pins
			// &pyra_display_pins
			&pyra_other_pins
			&i2c2_pins
			&i2c3_pins
			&i2c4_pins
			// &i2c5_pins
			// &pyra_dsi_a
	>;

/*
// inputs
#define GPIO_AUX 83			// BTN1 on EVM motherboard (gpio3_83)
#define GPIO_VSYNC 189			// VSYNC input (gpio6_189 in: comes from panel)
#define GPIO_LSH_TOP 184		// left top shoulder button - gpio6-184 - closes to GND
#define GPIO_LSH_BOT 183		// left bottom shoulder button - gpio6-183 - closes to GND
#define GPIO_RSH_TOP 180		// right top shoulder button - gpio6-180 - closes to GND
#define GPIO_RSH_BOT 179		// right bottom shoulder button - gpio6-179 - closes to GND
#define GPIO_LNUB 182			// left nub center button - gpio6-182 - closes to GND
#define GPIO_RNUB 181			// right nub center button - gpio6-181 - closes to GND
#define GPIO_LNUB_IRQ -1		// left nub IRQ - n/a
#define GPIO_RNUB_IRQ -1		// right nub IRQ - n/a
#define GPIO_LID 160			// lid close sensor - gpio6-160 - open collector output
#define GPIO_WAKEUP 161			// wakeup from modem - gpio6-161
#define GPIO_KEYIRQ 177			// keyboard controller IRQ - gpio6-177
#define GPIO_PENIRQ 173			// touch screen controller IRQ - gpio6-173
// outputs
#define GPIO_DISPEN 82			// enable (active high) +/-5 V TPS65133 - gpio3_82
#define GPIO_PWM 190			// enable 18V backlight (active high) - timer9/gpio6_190 (out) - or input to track what the panel is doing
#define GPIO_DISPLAY_RESET 176		// panel reset (active low)/enable - gpio6_176
#define GPIO_PERIPHERAL_RESET 230	// device reset (active low)/enable - gpio8_230
#define GPIO_3G_IGNITE 178		// start modem (active high pulse) - gpio6-178
*/

/* to find pinmux register offsets, see section A.7.2 in TRM

   note: offsets in the table are relative to 0x4a00 2800
   but reg = <0x4a002840 0x01b6> for omap5_pmx_core

   Therefore gpio5_153 with Address Offset 0x1D4
   translates into 0x194 (0xd0-0x40 => 0x90)
   and because it has [31:16] we have to add 0x02
   giving a result of 0x196.

   Definitions for bit patterns:
   0x0007	MUX_MODE0 .. MUX_MODE7
   0x0008	enable pull up/down
   0x0010	select pull up
   0x0020	disable power for I/O cell
   0x0100	enable input buffer (there is no explicit "enable output buffer" because that is defined by the GPIO direction)
   0x4000	enable wakeup detection
*/
// FIXME: we can now use the OMAP5_IOPAD() macro to do the conversion */

	pyra_button_pins: pinmux_button_gpio_pins {
		pinctrl-single,pins = <
			0x76 0x11e	/* (PIN_INPUT_PULLUP | MUX_MODE6)	/* 0x0B4:[31:16] gpio3_83  -- pullup is not really necessary since there is an external pullup */
			0xec 0x11e	/* (PIN_INPUT_PULLUP | MUX_MODE6)	/* 0x12C:[15:0]  gpio6_160 */
			0xee 0x11e	/* (PIN_INPUT_PULLUP | MUX_MODE6)	/* 0x12C:[31:16] gpio6_161 */
			0xcc 0x11e	/* (PIN_INPUT_PULLUP | MUX_MODE6)	/* 0x10C:[15:0]  gpio6_177 */
			0xc8 0x11e	/* (PIN_INPUT_PULLUP | MUX_MODE6)	/* 0x108:[15:0]  gpio6_179 */
			0xc6 0x11e	/* (PIN_INPUT_PULLUP | MUX_MODE6)	/* 0x104:[31:16] gpio6_180 */
			0xc4 0x11e	/* (PIN_INPUT_PULLUP | MUX_MODE6)	/* 0x104:[15:0]  gpio6_181 */
			0xf0 0x11e	/* (PIN_INPUT_PULLUP | MUX_MODE6)	/* 0x130:[15:0]  gpio6_182 */
			0xf2 0x11e	/* (PIN_INPUT_PULLUP | MUX_MODE6)	/* 0x130:[31:16] gpio6_183 */
			0xf4 0x11e	/* (PIN_INPUT_PULLUP | MUX_MODE6)	/* 0x134:[15:0]  gpio6_184 */
//			OMAP5_IOPAD(0x122, PIN_INPUT_PULLUP | MUX_MODE6)	/* 0x122:[15:0]  gpio6_166 */
		>;
	};

	pyra_display_pins: pinmux_display_gpio_pins {
		pinctrl-single,pins = <
			0x74 0x00e	/* (PIN_OUTPUT_PULLDOWN | MUX_MODE6)	/* 0x0B4:[15:0]  gpio3_82 - enable panel DC/DC */
			0x8a 0x10f	/* (PIN_INPUT_PULLDOWN | MUX_MODE6)	/* 0x0C8:[31:16] gpio6_189 - VSYNC input */
			0xb6 0x10f	/* (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* 0x0F4:[31:16] gpio6_190 - choose MUX_MODE0 for PWM_TIMER9 - choose MUX_MODE7 if panel outputs the PWM */
			0xce 0x00e	/* (PIN_OUTPUT_PULLDOWN | MUX_MODE6)	/* 0x178:[31:16] gpio6_176 - panel reset */
		>;
	};

	pyra_other_pins: pinmux_other_gpio_pins {
		pinctrl-single,pins = <
			0x72 0x00e	/* (PIN_OUTPUT_PULLDOWN | MUX_MODE6)	/* 0x0B0:[31:16] gpio3_81 - TCA6424 interrupt */
			0xca 0x00e	/* (PIN_OUTPUT_PULLDOWN | MUX_MODE6)	/* 0x108:[31:16] gpio6_178 - start modem */
			0xd4 0x11e	/* (PIN_INPUT_PULLUP | MUX_MODE6)	/* 0x114:[15:0]  gpio6_173 - touch screen */
			0x138 0x11e	/* (PIN_INPUT_PULLUP | MUX_MODE6)	/* 0x178:[15:0]  gpio8_230 - reset I2C peripherals */
		>;
	};

/* enable I2C pinmux */

	i2c2_pins: pinmux_i2c2_pins {
		pinctrl-single,pins = <
			0x178 0x118	/* (PIN_INPUT_PULLUP | MUX_MUX_MODE0)		/* i2c2_scl */
			0x17a 0x118	/* (PIN_INPUT_PULLUP | MUX_MUX_MODE0)		/* i2c2_sda */
		>;
	};

	i2c3_pins: pinmux_i2c3_pins {
		pinctrl-single,pins = <
			0x13a 0x118	/* (PIN_INPUT_PULLUP | MUX_MUX_MODE0)		/* i2c3_scl */
			0x13c 0x118	/* (PIN_INPUT_PULLUP | MUX_MUX_MODE0)		/* i2c3_sda */
		>;
	};

	i2c4_pins: pinmux_i2c4_pins {
		pinctrl-single,pins = <
			0xb8 0x118	/* (PIN_INPUT_PULLUP | MUX_MUX_MODE0)		/* i2c4_scl (gpio7_200) */
			0xba 0x118	/* (PIN_INPUT_PULLUP | MUX_MUX_MODE0)		/* i2c4_sda (gpio7_201) */
		>;
	};

/*	i2c5_pins: pinmux_i2c5_pins {
		pinctrl-single,pins = <
			0x184 (PIN_INPUT_PULLUP | MUX_MODE0)		/* i2c5_scl * /
			0x186 (PIN_INPUT_PULLUP | MUX_MODE0)		/* i2c5_sda * /
		>;
	};

/*	i2c5_pins: pinmux_i2c5_pins {
		pinctrl-single,pins = <
// CHECKME: is this 0x186 + 0x188 or 0x184+0x186 ?
			0x186 0x118	/* (PIN_INPUT | MUX_MUX_MODE0)		/* i2c5_scl * /
			0x188 0x118	/* (PIN_INPUT | MUX_MUX_MODE0)		/* i2c5_sda * /
		>;
	}; */

/* enable MIPI pinmux - we may not really need this because the PinMux only has MUX_MODE0 */

	pyra_dsi_a: pinmux_dsi_a_pins {
		pinctrl-single,pins = <
			0x8c 0x0	/* (PIN_OUTPUT | MUX_MODE0)	/* 0x0cc:[15:0]  dsiporta_lane0x */
			0x8e 0x0	/* (PIN_OUTPUT | MUX_MODE0)	/* 0x0cc:[31:16] dsiporta_lane0y */
			0x90 0x0	/* (PIN_OUTPUT | MUX_MODE0)	/* 0x0d0:[15:0]  dsiporta_lane1x */
			0x92 0x0	/* (PIN_OUTPUT | MUX_MODE0)	/* 0x0d0:[31:16] dsiporta_lane1y */
			0x94 0x0	/* (PIN_OUTPUT | MUX_MODE0)	/* 0x0d4:[15:0]  dsiporta_lane2x */
			0x96 0x0	/* (PIN_OUTPUT | MUX_MODE0)	/* 0x0d4:[31:16] dsiporta_lane2y */
			0x98 0x0	/* (PIN_OUTPUT | MUX_MODE0)	/* 0x0d8:[15:0]  dsiporta_lane3x */
			0x9a 0x0	/* (PIN_OUTPUT | MUX_MODE0)	/* 0x0d8:[31:16] dsiporta_lane3y */
			0x9c 0x0	/* (PIN_OUTPUT | MUX_MODE0)	/* 0x0dc:[15:0]  dsiporta_lane4x */
			0x9e 0x0	/* (PIN_OUTPUT | MUX_MODE0)	/* 0x0dc:[31:16] dsiporta_lane4y */
		>;
	};
};

/* register devices connected to EVM-Panel-I2C */
&i2c2 {
// FIXME: define clock frequencies only once
	clock-frequency = <400000>;

	/* touchscreen */
	tsc2007@48 {
		compatible = "ti,tsc2007";
		reg = <0x48>;
		pinctrl-names = "default";
/* FIXME:		pinctrl-0 = <&penirq_pins>; */
		interrupt-parent = <&gpio6>;
		interrupts = <13 IRQ_TYPE_EDGE_FALLING>;	/* gpio6_173 falling edge */
		gpios = <&gpio6 13 GPIO_ACTIVE_LOW>;	/* gpio6_173 active low */
		ti,x-plate-ohms = <550>;
		ti,min-x = <0x100>;
		ti,max-x = <0xf00>;
		ti,min-y = <0xf00>;
		ti,max-y = <0x100>;
		ti,min-rt = <0xfff>;
		ti,max-rt = <0>;
	};

	crtouch@49 {
		compatible = "freescale,crtouch";
		reg = <0x49>;
		interrupt-parent = <&gpio6>;
		interrupts = <13 IRQ_TYPE_EDGE_FALLING>;	/* gpio6_173 falling edge */
		gpios = <&gpio6 13 1>;	/* gpio6_173 active low */
		/* more paramters tbd. */
	};

	/* leds */
	tca6507@45 {
		compatible = "ti,tca6507";
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <0x45>;

		/* unused */
		/* gpio-controller;
		#gpio-cells = <2>; */

		display_led0: red_aux@0 {
			label = "display::led-0";
			reg = <0x0>;
			linux,default-trigger = "mmc0";
		};

		display_led1: green_aux@1 {
			label = "display::led-1";
			reg = <0x1>;
			linux,default-trigger = "heartbeat";
		};

		display_led2: blue_aux@2 {
			label = "display::led-2";
			reg = <0x2>;
			linux,default-trigger = "timer";
		};

		display_led3: set1@3 {
			label = "display::led-3";
			reg = <0x3>;
			linux,default-trigger = "default-on";
		};

		display_led4: set2@4 {
			label = "display::led-4";
			reg = <0x4>;
			linux,default-trigger = "timer";
		};

		display_led5: set3@5 {
			label = "display::led-5";
			reg = <0x5>;
			linux,default-trigger = "mmc0";
		};

		display_led6: set4@6 {
			label = "display::led-6";
			reg = <0x6>;
			linux,default-trigger = "heartbeat";
		};

	};

};

/* register devices connected to Peripheral-I2C */
&i2c4 {

	clock-frequency = <400000>;

	/* leds (only on V2 main board) */
	tca6507@45 {
		compatible = "ti,tca6507";
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <0x45>;

		pyra_led0: red_aux@0 {
			label = "test::led-l-red";
			reg = <0x0>;
			linux,default-trigger = "mmc0";
		};

		pyra_led1: green_aux@1 {
			label = "test::led-l-green";
			reg = <0x1>;
			linux,default-trigger = "heartbeat";
		};

		pyra_led2: blue_aux@2 {
			label = "test::led-l-blue";
			reg = <0x2>;
			linux,default-trigger = "timer";
		};

		pyra_led3: set1@3 {
			label = "test::led-kbd1";
			reg = <0x3>;
			linux,default-trigger = "default-on";
		};

		pyra_led4: set2@4 {
			label = "test::led-kbd2";
			reg = <0x4>;
			linux,default-trigger = "timer";
		};

		pyra_led5: set3@5 {
			label = "test::led-kbd3";
			reg = <0x5>;
			linux,default-trigger = "mmc0";
		};

		pyra_led6: set4@6 {
			label = "test::led-kbd4";
			reg = <0x6>;
			linux,default-trigger = "heartbeat";
		};

	};

	/* left nub */
	as5013@40 {
		compatible = "ams,as5013";
		reg = <0x40>;
		// gpios = <&gpio...>, <&gpio>;
	};

	/* right nub */
	as5013@41 {
		compatible = "ams,as5013";
		reg = <0x41>;
		// gpios = <&gpio...>, <&gpio>;
	};

	/* keyboard scanner */
	tca8418@34 {
		compatible = "ti,tca8418";	/* this translates into request_module("i2c:tca8418")
									   so it must be known as a MODULE_ALIAS to modprobe -c */
		reg = <0x34>;
		/* the interrupt is specified as:
			The first cell is the GPIO number.
			The second cell is used to specify flags:
			bits[3:0] trigger type and level flags:
				1 = low-to-high edge triggered.
				2 = high-to-low edge triggered.
				4 = active high level-sensitive.
				8 = active low level-sensitive.
		 */
		interrupt-parent = <&gpio6>;
		interrupts = <17 IRQ_TYPE_EDGE_RISING>;	/* gpio6_177 low-to-high edge */
		keypad,num-rows = <8>;
		keypad,num-columns = <10>;
		linux,keymap = <
	/* The 32-bit big endian cell is packed as: row << 24 | column << 16 | key-code */

			0x0306003b
			0x0203003c
			0x02040057
			0x01080058
			0x0102003d
			0x0701003e
			0x07030002
			0x06070003
			0x06010004
			0x05050005
			0x06060006
			0x04030007
			0x03070008
			0x03050009
			0x0205000a
			0x0107000b
			0x0702000e
			0x0503000f
			0x06040010
			0x05080011
			0x05020012
			0x04060013
			0x06020014
			0x03040015
			0x02080016
			0x02020017
			0x01060018
			0x00050019
			0x0004001c
			0x0400002a
			0x0506001e
			0x0401001f
			0x04040020
			0x03080021
			0x03020022
			0x02060023
			0x01030024
			0x01040025
			0x00080026
			0x00020036
			0x07060033
			0x06030034
			0x0507002c
			0x0501002d
			0x0405002e
			0x0407002f
			0x03030030
			0x02070031
			0x07040032
			0x01050039
			0x00070039
			0x00000064
			0x01090069
			0x0309006a
			0x00090067
			0x0209006c
			0x05090066
			0x0709006b
			0x04090068
			0x0609006d
			0x03000038
			0x0200001d
			0x01000001
			0x00010036
			0x0101004e
			0x03010061
			0x0201004a
			0x07000110
			0x06000111
		>;
	};

	/* modem current sensor */
	ina231@4f {
		compatible = "ti,ina231";
		reg = <0x4f>;
		shunt-resistor = <20000>;	/* 20 mOhm */
	};

	/* fuel gauge */
	bq27200@55 {
		compatible = "ti,bq27200";
		reg = <0x55>;
	};

	/* charger */
	bq24297@6b {
		/* FIXME: driver is quite broken */
//		compatible = "ti,bq24297";
		reg = <0x6b>;
		ti,chg_current = <1234>;
//		gpios = <>;	// chg_irq_pin, dc_det_pin
	};

	/* microphone detect */
	ts3a225@3b {
		compatible = "ti,ts3a225";
		reg = <0x3b>;
	};

};

/* register devices connected to System-I2C on CPU board */
&i2c2 {

	clock-frequency = <400000>;

	/* usb bridge */
	usb3503@08 {
		compatible = "smsc,usb3503a";
		reg = <0x08>;
/*
		refclk	// comes from OMAP5 FREF_CLK1_OUT/GPIO1_W K11
		refclk-frequency
		disabled-ports
		intn-gpios = <&gpio9 22 GPIO_ACTIVE_HIGH>;
		connect-gpios
		reset-gpios = <&gpio3 16 GPIO_ACTIVE_HIGH>;	// might be in conflict with reset-gpios of the ususb2_phy
		initial-mode
*/
	};
};

/* register devices connected to Sensor-I2C */
&i2c2 {
	clock-frequency = <400000>;

	/* gyroscope sensor */
	bmg160@69 {
		compatible = "bosch,bmg160";
		reg = <0x69>;
	};
	/* accelerometer sensor */
	bmc150@18 {
		compatible = "bosch,bmc150";
		reg = <0x18>;
	};
	/* compass sensor */
	bmc150@12 {
		compatible = "bosch,bmc150";
		reg = <0x12>;
	};
	/* barometer sensor */
	bmp180@77 {
		compatible = "bosch,bmp180";
		reg = <0x77>;
	};
	/* 9-axis sensor sensor */
	bno050@28 {
		compatible = "bosch,bno050";
		reg = <0x28>;
	};
};

/* register devices connected to Panel-I2C */
&i2c4 {

	clock-frequency = <400000>;

	/* touchscreen */
	tsc2007@48 {
		compatible = "ti,tsc2007";
		reg = <0x48>;
		pinctrl-names = "default";
/* FIXME:		pinctrl-0 = <&penirq_pins>; */
		interrupt-parent = <&gpio6>;
		interrupts = <13 IRQ_TYPE_EDGE_FALLING>;	/* gpio6_173 falling edge */
		gpios = <&gpio6 13 GPIO_ACTIVE_LOW>;	/* gpio6_173 active low */
		ti,x-plate-ohms = <550>;
		ti,min-x = <0x100>;
		ti,max-x = <0xf00>;
		ti,min-y = <0xf00>;
		ti,max-y = <0x100>;
		ti,min-rt = <0xfff>;
		ti,max-rt = <0>;
	};

	crtouch@49 {
		compatible = "freescale,crtouch";
		reg = <0x49>;
		interrupt-parent = <&gpio6>;
		interrupts = <13 IRQ_TYPE_EDGE_FALLING>;	/* gpio6_173 falling edge */
		gpios = <&gpio6 13 1>;	/* gpio6_173 active low */
		/* more paramters tbd. */
	};

	/* leds */
	tca6507@45 {
		compatible = "ti,tca6507";
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <0x45>;

		panel_led0: red_aux@0 {
			label = "panel::led-0";
			reg = <0x0>;
			linux,default-trigger = "mmc0";
		};

		panel_led1: green_aux@1 {
			label = "panel::led-1";
			reg = <0x1>;
			linux,default-trigger = "heartbeat";
		};

		panel_led2: blue_aux@2 {
			label = "panel::led-2";
			reg = <0x2>;
			linux,default-trigger = "timer";
		};

		panel_led3: set1@3 {
			label = "panel::led-3";
			reg = <0x3>;
			linux,default-trigger = "default-on";
		};

		panel_led4: set2@4 {
			label = "panel::led-4";
			reg = <0x4>;
			linux,default-trigger = "timer";
		};

		panel_led5: set3@5 {
			label = "panel::led-5";
			reg = <0x5>;
			linux,default-trigger = "mmc0";
		};

		panel_led6: set4@6 {
			label = "panel::led-6";
			reg = <0x6>;
			linux,default-trigger = "heartbeat";
		};

	};

};

/* register devices connected to System-I2C */
&i2c2 {

	clock-frequency = <400000>;

	/* system/keyboard-led */
	gpio99: tca6424@22 {
		compatible = "ti,tca6424";
		interrupt-parent = <&gpio3>;
		interrupts = <17 IRQ_TYPE_LEVEL_HIGH>;	/* gpio3_81 */
		reg = <0x22>;
		gpio-controller;
		#gpio-cells = <2>;
	};
	/* INA231 */
	/* BQ27200 */
	/* BQ24297 */
};

&i2c5 { // should be defined in omap5-uevm.dts! - but the bus is not connected!

	/* usb bridge */
	usb3503@08 {
		compatible = "smsc,usb3503a";
		reg = <0x08>;
/*
	//	refclk	// comes from OMAP5 FREF_CLK1_OUT/GPIO1_W K11
	//	refclk-frequency
	//	connect-gpios
		disabled-ports = <3>;
		intn-gpios = <&gpio9 22 GPIO_ACTIVE_HIGH>;
		reset-gpios = <&gpio3 16 GPIO_ACTIVE_HIGH>;	// might be in conflict with reset-gpios of the ususb2_phy
		initial-mode = <1>;
*/
	};
};

/ {
	evm_leds { // should be defined in omap5-uevm.dts!

/* trigger values
none nand-disk mmc0 mmc1 timer oneshot [heartbeat] cpu0 cpu1 default-on transient mmc2 bq27200-0-charging-or-full bq27200-0-charging bq27200-0-full bq27200-0-charging-blink-full-solid rfkill0
*/

		compatible = "gpio-leds";
		led@1 {
			label = "omap5:red:led";
			gpios = <&gpio9 17 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
			default-state = "off";
		};

		led@2 {
			label = "omap5:green:led";
			gpios = <&gpio9 18 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
			default-state = "off";
		};

		led@3 {
			label = "omap5:blue:led";
			gpios = <&gpio9 19 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
			default-state = "off";
		};

		led@4 {
			label = "omap5:green:led1";
			gpios = <&gpio9 2 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "cpu0";
			default-state = "off";
		};
		led@5 {
			label = "omap5:green:led2";
			gpios = <&gpio9 3 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "cpu1";
			default-state = "off";
		};
		led@6 {
			label = "omap5:green:led3";
			gpios = <&gpio9 4 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "mmc0";
			default-state = "off";
		};
		led@7 {
			label = "omap5:green:led4";
			gpios = <&gpio9 5 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "mmc1";
			default-state = "off";
		};
		led@8 {
			label = "omap5:green:led5";
			gpios = <&gpio9 6 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "mmc2";
			default-state = "off";
		};
	};

	pyra_leds {
		compatible = "gpio-leds";
		led@1 {
			label = "pyra:red:left";
			gpios = <&gpio99 5 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};

		led@2 {
			label = "pyra:green:left";
			gpios = <&gpio99 6 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};

		led@3 {
			label = "pyra:blue:left";
			gpios = <&gpio99 7 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};

		led@4 {
			label = "pyra:red:mid";
			gpios = <&gpio99 17 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};

		led@5 {
			label = "pyra:green:mid";
			gpios = <&gpio99 18 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "timer";
			default-state = "off";
		};

		led@6 {
			label = "pyra:blue:mid";
			gpios = <&gpio99 19 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};

		led@7 {
			label = "pyra:red:right";
			gpios = <&gpio99 21 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};

		led@8 {
			label = "pyra:green:right";
			gpios = <&gpio99 22 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};

		led@9 {
			label = "pyra:blue:right";
			gpios = <&gpio99 23 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};

	};

	keypad_leds {
		compatible = "gpio-leds";
		led@1 {
			label = "keypad1";
			gpios = <&gpio99 2 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};

		led@2 {
			label = "keypad2";
			gpios = <&gpio99 3 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};

		led@3 {
			label = "keypad3";
			gpios = <&gpio99 12 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};

		led@4 {
			label = "keypad4";
			gpios = <&gpio99 13 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};
	};
};

/ {

gpio-keys@1 {
		compatible = "gpio-keys";

		#address-cells = <7>;
		#size-cells = <0>;

		BTN1 {
			label = "BTN1";
			linux,code = <169>;
			gpios = <&gpio3 19 GPIO_ACTIVE_LOW>;	/* gpio3_83 is BTN1 */
			gpio-key,wakeup;
			autorepeat;
			debounce_interval = <50>;
		};

		left_shoulder_top {
			label = "Left-Shoulder-Top";
			linux,code = <16>;	/* KEY_Q */
			// CHECKME: polarity may change for next revision!
			gpios = <&gpio6 24 GPIO_ACTIVE_LOW>;	/* gpio6_184 */
			gpio-key,wakeup;
		};

		left_shoulder_bottom {
			label = "Left-Shoulder-Bottom";
			linux,code = <44>;	/* KEY_Z */
			gpios = <&gpio6 23 GPIO_ACTIVE_LOW>;	/* gpio6_183 */
			gpio-key,wakeup;
		};

		right_shoulder_top {
			label = "Right-Shoulder-Top";
			linux,code = <25>;	/* KEY_P */
			gpios = <&gpio6 20 GPIO_ACTIVE_LOW>;	/* gpio6_180 */
			gpio-key,wakeup;
		};

		right_shoulder_bottom {
			label = "Right-Shoulder-Bottom";
			linux,code = <50>;	/* KEY_M */
			gpios = <&gpio6 19 GPIO_ACTIVE_LOW>;	/* gpio6_179 */
			gpio-key,wakeup;
		};

		left_nub {
			label = "Left-Nub";
			linux,code = <38>;	/* KEY_L */
			gpios = <&gpio6 22 GPIO_ACTIVE_LOW>;	/* gpio6_182 */
			gpio-key,wakeup;
		};

		right_nub {
			label = "Right-Nub";
			linux,code = <19>;	/* KEY_R */
			gpios = <&gpio6 21 GPIO_ACTIVE_LOW>;	/* gpio6_181 */
			gpio-key,wakeup;
		};

	};

gpio-keys@2 {
		compatible = "gpio-keys";

		#address-cells = <2>;
		#size-cells = <0>;

		wwan_wakeup {
			label = "3G WOE";
			linux,code = <17>;	/* KEY_W */
			gpios = <&gpio6 1 GPIO_ACTIVE_HIGH>;	/* gpio6_161 */
			gpio-key,wakeup;
			/* debounce-interval */
		};

		/* FIXME: there is a special switch event code (SW_LID) but I don't know how to configure that for the gpio-keys driver */
		display_lid {
			label = "Display Lid";
			// linux,input-type = <5>; /* EV_SW */
			// linux,code = <0>; /* SW_LID */
			linux,code = <45>;	/* KEY_X */
			gpios = <&gpio6 0 GPIO_ACTIVE_LOW>;	/* gpio6_160 */
			gpio-key,wakeup;
		};

	};

};

/* more things to do
* add a regulator-gpio for the LCD
* configure WLAN/Bluetooth module
*/
